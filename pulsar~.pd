#N canvas 228 69 1358 1008 10;
#X obj 218 268 soundfiler;
#X obj 268 127 soundfiler;
#X floatatom 375 271 5 0 0 0 - - - 0;
#X floatatom 429 269 5 0 0 0 - - - 0;
#X obj 375 291 sig~;
#X obj 429 289 sig~;
#X floatatom 477 269 5 0 0 0 - - - 0;
#X obj 477 289 sig~;
#X obj 47 106 inlet~;
#X obj 218 158 inlet;
#X obj 268 40 inlet;
#X obj 478 128 unpack f f f;
#X obj 478 107 inlet;
#X obj 169 110 inlet~;
#X text 44 88 fund;
#X text 217 141 pulsaret buff;
#X text 267 24 env buff;
#X text 166 93 formant freq;
#X text 474 90 ratios (3 packed float);
#X text 12 11 Args: pulsar number;
#X obj 331 41 loadbang;
#X obj 331 62 f \$1;
#X obj 263 182 loadbang;
#X obj 263 203 f \$1;
#X obj 268 86 pack s f;
#X obj 218 225 pack s f;
#X obj 47 782 *~;
#X obj 47 827 lop~ 22050;
#X obj 47 848 lop~ 22050;
#X obj 47 869 lop~ 22050;
#X obj 47 890 outlet~;
#X obj 574 216 inlet;
#X obj 574 237 sig~;
#X obj 47 806 *~;
#X obj 658 402 inlet;
#X text 572 198 probability;
#X text 657 383 switch between schillinger/stochastic;
#X obj 280 766 expr~ if($f3 == 0 \, $v1 \, $v2);
#X obj 751 105 inlet~;
#X obj 828 107 inlet;
#X obj 828 128 == 0;
#X obj 751 126 *~;
#X text 751 84 ext;
#X text 824 92 int or ext;
#X obj 47 740 *~ 22050;
#X obj 47 761 tabread4~ PdPG_crown;
#X obj 644 536 fexpr~ if($x1 < 1/$x3 \, (pulsaret\$1[$x1*$f2*($x3)]*$f10+$x9) * (envelope\$1[$x1*$f4*($x3)]) \, 0) \; if($y3%$x5 == 0 || $y3%$x6 == 0 || $y3%$x7 == 0 \, 1 \, 0) \; if($x1 < $x1[-1] \, ($y3 + 1) % ($x5 * $x6 * $x7) \, $y3) \; if($x1 < $x1[-1] \, if($x8 > (random(0 \, 100)) \, 1 \, 0) \, $y4), f 82;
#X obj 644 494 loadbang;
#X msg 644 515 stop;
#X text 639 604 ((pulsaret\$1[int($x1*$f2*$x3)]*((int($x1*$f2*$x3) + 1) - ($x1*$f2*$x3))) + (pulsaret\$1[int($x1*$f2*$x3)+1]*(($x1*$f2*$x3) - int($x1*$f2*$x3)))) ((envelope\$1[int($x1*$f4*$x3)]*((int($x1*$f4*$x3) + 1) - ($x1*$f4*$x3))) + (envelope\$1[int($x1*$f4*$x3)+1]*(($x1*$f4*$x3) - int($x1*$f4*$x3))));
#X text 736 703 linear interpolation on table reads is the mess above- formula solved to find Y \, no divide x1 - x0 because it'll always be 1;
#X text 162 829 $y5 deals with stochastic masking: if the probability is smaller than the noise input($x9) \, play the pulsar \, otherwise mask it.;
#X text 162 867 $y4 is something like a counter used in the schillinger masking;
#X obj 252 568 r interp\$1;
#X obj 87 589 expr~ if($f3 == 0 \, $v2 \, $v1);
#X obj 664 819 fexpr~ if($x1 < 1/$x3 \, (((pulsaret\$1[int($x1*$f2*$x3)]*((int($x1*$f2*$x3) + 1) - ($x1*$f2*$x3))) + (pulsaret\$1[int($x1*$f2*$x3)+1]*(($x1*$f2*$x3) - int($x1*$f2*$x3))))*$f10+$x9) * (((envelope\$1[int($x1*$f4*$x3)]*((int($x1*$f4*$x3) + 1) - ($x1*$f4*$x3))) + (envelope\$1[int($x1*$f4*$x3)+1]*(($x1*$f4*$x3) - int($x1*$f4*$x3))))) \, 0) \; if($x1 < 1/$x3 \, (pulsaret\$1[$x1*$f2*($x3)]*$f10+$x9) * (envelope\$1[$x1*$f4*($x3)]) \, 0) \; if($y3%$x5 == 0 || $y3%$x6 == 0 || $y3%$x7 == 0 \, 1 \, 0) \; if($x1 < $x1[-1] \, ($y3 + 1) % ($x5 * $x6 * $x7) \, $y3) \; if($x1 < $x1[-1] \, if($x8 > (random(0 \, 100)) \, 1 \, 0) \, $y4), f 82;
#X obj 721 762 loadbang;
#X msg 721 783 stop;
#X msg 268 106 read -resize \$1 envelope\$2;
#X msg 218 247 read -resize \$1 pulsaret\$2;
#X obj 87 390 fexpr~ if($x1 < 1/$x3 \, (((pulsaret\$1[int($x1*$f2*$x3)]*((int($x1*$f2*$x3) + 1) - ($x1*$f2*$x3))) + (pulsaret\$1[int($x1*$f2*$x3)+1]*(($x1*$f2*$x3) - int($x1*$f2*$x3))))*$f10+$x9 + $x11) * (((envelope\$1[int($x1*$f4*$x3)]*((int($x1*$f4*$x3) + 1) - ($x1*$f4*$x3))) + (envelope\$1[int($x1*$f4*$x3)+1]*(($x1*$f4*$x3) - int($x1*$f4*$x3))))) \, 0) \; if($x1 < 1/$x3 \, (pulsaret\$1[$x1*$f2*($x3)]*$f10+$x9) * (envelope\$1[$x1*$f4*($x3)]) \, 0) \; if($y4%$x5 == 0 || $y4%$x6 == 0 || $y4%$x7 == 0 \, 1 \, 0) \; if($x1 < $x1[-1] \, ($y4 + 1) % ($x5 * $x6 * $x7) \, $y4) \; if($x1 < $x1[-1] \, if($x8 > (random(0 \, 100)) \, 1 \, 0) \, $y5), f 82;
#X obj 915 194 inlet~;
#X obj 286 925 block~ 1024 1 2;
#X connect 0 0 60 1;
#X connect 1 0 60 3;
#X connect 2 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 60 4;
#X connect 5 0 60 5;
#X connect 6 0 7 0;
#X connect 7 0 60 6;
#X connect 8 0 44 0;
#X connect 8 0 60 0;
#X connect 9 0 25 0;
#X connect 10 0 24 0;
#X connect 11 0 2 0;
#X connect 11 1 3 0;
#X connect 11 2 6 0;
#X connect 12 0 11 0;
#X connect 13 0 60 2;
#X connect 20 0 21 0;
#X connect 21 0 24 1;
#X connect 22 0 23 0;
#X connect 23 0 25 1;
#X connect 24 0 58 0;
#X connect 25 0 59 0;
#X connect 26 0 33 0;
#X connect 27 0 28 0;
#X connect 28 0 29 0;
#X connect 29 0 30 0;
#X connect 31 0 32 0;
#X connect 32 0 60 7;
#X connect 33 0 27 0;
#X connect 34 0 37 2;
#X connect 37 0 33 1;
#X connect 38 0 41 0;
#X connect 39 0 40 0;
#X connect 39 0 41 1;
#X connect 40 0 60 9;
#X connect 41 0 60 8;
#X connect 44 0 45 0;
#X connect 45 0 26 0;
#X connect 47 0 48 0;
#X connect 48 0 46 0;
#X connect 53 0 54 2;
#X connect 54 0 26 1;
#X connect 56 0 57 0;
#X connect 57 0 55 0;
#X connect 58 0 1 0;
#X connect 59 0 0 0;
#X connect 60 0 54 0;
#X connect 60 1 54 1;
#X connect 60 2 37 0;
#X connect 60 4 37 1;
#X connect 61 0 60 10;
